event.preventDefault();
let tempArr = [];
let userWord = event.target.value;
for (let i = 0; i < country_list.length; i ++) {
  if (country_list[i].includes(userWord)) {
    tempArr.push(country_list[i])
  }
}
this.setState({
  autocompleteList: tempArr
})
console.log(this.state.autocompleteList);









//Shapes.js
var React = require('react');
var Component = React.Component;
class Color extends Component {
  render() {
    const divStyle = {
      backgroundColor: this.props.name,
      color: 'white',
      fontSize: '20px',
      height: '100px',
      width: '100px'
    }
    return (
      <div style={divStyle}>{this.props.name}</div>
    )
  }
}
module.exports = Color;




// persons example
componentDidMount() {
    axios.get(`https://jsonplaceholder.typicode.com/users`).then(res => {
      console.log(res);
      this.setState({ persons: res.data });
    });
  }

  render() {
    return(
      <ul>
        {this.state.persons.map(person => <li key={person.id}>{person.name}</li>)}
      </ul>
    )
  }









//  VVV  google map example
import React, { Component } from 'react';
import GoogleMapReact from 'google-map-react';

const AnyReactComponent = ({ text }) => <div>{ text }</div>;

export default class Map extends Component {
  static defaultProps = {
    center: { lat: 40.7446790, lng: -73.9485420 },
    zoom: 11
  }
render() {
    return (
      <div className='google-map'>
        <GoogleMapReact
          defaultCenter={ this.props.center }
          defaultZoom={ this.props.zoom }>
          <AnyReactComponent
            lat={ 40.7473310 }
            lng={ -73.8517440 }
            text={ 'Where is Waldo?' }
          />
        </GoogleMapReact>
      </div>
    )
  }
}








//   VVV   codes
Region codes
WLD - All countries
EAP - (developing only)
EAS - (all income levels)
ECA - (developing only)
ECS - (all income levels)
LAC - (developing only)
LCN - (all income levels)
MNA - (developing only)
MEA - (all income levels)
NAC
SAS
SSA - (developing only)
SSF - (all income levels)
Income level codes
NOC
OEC
HIC
HPC
LIC
LMC
LMY
MIC
UMC
